{"version":3,"sources":["TinyManager/components/IconButton/IconButton.js","TinyManager/components/IconButton/index.js","TinyManager/components/Topbar/index.js","TinyManager/services/DbService.js","TinyManager/services/LocalStorageService.js","TinyManager/services/TinyManagerAPI.js","TinyManager/services/ThemeProvider.js","TinyManager/containers/Topbar/index.js","TinyManager/components/Loader/Loader.js","TinyManager/components/Loader/index.js","TinyManager/containers/Notes/index.js","TinyManager/containers/Todos/TodoFilter.js","TinyManager/components/TodoForm/TodoForm.js","TinyManager/types/index.js","TinyManager/components/TodoForm/index.js","TinyManager/containers/Todos/TodoFormDialog.js","TinyManager/components/Todo/Todo.js","TinyManager/components/Todo/index.js","TinyManager/components/TodoList/TodoList.js","TinyManager/components/TodoList/index.js","TinyManager/containers/Todos/index.js","TinyManager/assets/quotes/index.js","TinyManager/services/QuoteService.js","TinyManager/containers/Home/index.js","TinyManager/components/Paper/Paper.js","TinyManager/components/Paper/index.js","TinyManager/components/ProjectCard/ProjectCard.js","TinyManager/components/ProjectCard/index.js","TinyManager/components/TaskForm/TaskForm.js","TinyManager/components/TaskForm/index.js","TinyManager/containers/Projects/TaskForm.js","TinyManager/components/ProjectForm/ProjectForm.js","TinyManager/components/ProjectForm/index.js","TinyManager/containers/Projects/ProjectForm.js","TinyManager/components/CircularProgressWithLabel/CircularProgressWithLabel.js","TinyManager/components/CircularProgressWithLabel/index.js","TinyManager/components/TaskCard/TaskCard.js","TinyManager/components/TaskCard/index.js","TinyManager/containers/Projects/ProjectView.js","TinyManager/containers/Projects/ProjectList.js","TinyManager/containers/Projects/index.js","TinyManager/containers/Content/index.js","TinyManager/index.js","serviceWorker.js","index.js"],"names":["icons","filter","FilterListIcon","edit","EditIcon","attachment","AttachFile","invertColors","InvertColors","delete","Delete","IconButton","props","icon","rest","Icon","size","AppBar","withStyles","theme","root","boxShadow","custom","shadow","MuiAppBar","useStyles","makeStyles","title","flexGrow","cursor","logo","fontSize","Topbar","onToggleDarkMode","classes","color","Toolbar","variant","Typography","className","component","Link","to","role","aria-label","Button","onClick","db","Dexie","tableName","a","query","where","table","reverse","toArray","findOne","get","version","stores","projects","todos","tasks","updates","defineClass","name","String","description","completed","Boolean","note","priority","Number","progress","projectId","taskId","createdAt","find","insert","record","add","then","recordId","update","id","updateCount","Error","remove","removeBulk","ids","bulkDelete","getTable","setItem","key","value","service","JSON","stringify","getItem","parse","err","setDefaultNotes","localStorage","getDefaultNotes","setDarkMode","getDarkMode","setNotes","getNotes","DEFAULT_NOTES","DARK_MODE","NOTES","fetchProjects","DbService","fetchProject","fetchTasks","fetchTask","addProject","project","addTask","task","updateProject","updateTask","removeTodo","todo","removeProject","removeTask","removeBulkTask","taskIds","fetchTodos","addTodo","updateTodo","fetchNotes","LocalStorageService","updateNotes","notes","updateDefaultNotes","fetchDefaultNotes","updateDarkMode","fetchDarkMode","ThemeContext","React","createContext","ThemeProvider","children","darkMode","darkModeProp","useState","TinyManagerAPI","toggleDarkMode","useCallback","createMuiTheme","palette","type","primary","orange","indigo","secondary","grey","error","deepOrange","red","typography","fontFamily","MuiTextField","overrides","MuiButton","textTransform","Provider","CssBaseline","TopbarContainer","useContext","height","width","position","display","justifyContent","alignItems","top","bottom","main","animationDuration","Loader","clsx","CircularProgress","thickness","disableShrink","action","marginBottom","spacing","caption","textAlign","marginTop","Notes","loading","setLoading","handleUpdateStorage","useMemo","debounce","handleChange","e","target","handleDownloadNote","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","click","handleClearNote","useEffect","Box","disabled","TextField","onChange","rows","rowsMax","placeholder","multiline","fullWidth","autoFocus","TodoFilter","active","onFilterClick","anchorEl","setAnchorEl","handleClose","event","currentTarget","Menu","keepMounted","open","onClose","label","map","item","MenuItem","selected","PropTypes","shape","oneOfType","string","number","bool","form","padding","TodoForm","values","errors","onSubmit","onCancel","noValidate","Grid","container","xs","align","gutterBottom","Divider","margin","helperText","required","defaultProps","preventDefault","TodoFormDialog","initialValue","saving","Object","assign","setStore","store","handleSubmit","keys","length","Dialog","maxWidth","DialogContent","listItemContainer","listStyle","Todo","divider","onCheck","onDelete","handleCheck","handleDelete","handleClick","ListItem","ContainerProps","button","dense","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primaryTypographyProps","ListItemSecondaryAction","list","overflow","TodoList","onTodoClick","onTodoCheck","onTodoDelete","List","todosContainer","todosFilter","marginRight","Todos","dialogOpen","setFilter","filterTodos","t","handleOpenDialog","handleCloseDialog","handleAddNewTodoClick","handleTodoClick","handleAddNewTodo","catch","alert","handleEditTodo","handleTodoCheck","handleTodoDelete","handleFilterClick","count","quotes","getQuote","max","randomNumber","Math","floor","random","Home","defaultNotes","activeTab","setActiveTab","setChecked","quote","QuoteService","handleChangeActiveTab","handleChangeDefaultNotes","Fade","in","FormControlLabel","control","Tabs","indicatorColor","textColor","Tab","Paper","borderRadius","MuiPaper","displayName","propTypes","paper","flexDirection","ProjectCard","onEdit","showEditButton","showDeleteButton","handleEdit","noWrap","LinearProgress","round","PRIORITIES","PERCENTAGES","Array","fill","_","i","TaskForm","justify","sm","FormControl","InputLabel","Select","defaultValue","percentage","TaskFormContainer","initialValues","formik","useFormik","validate","enableReinitialize","isSubmitting","ProjectForm","ProjectFormContainer","handleCancel","setSubmitting","CircularProgressWithLabel","left","right","mediumPriority","warning","light","backgroundColor","highPriority","completedFlag","success","TaskCard","useTheme","taskCard","noTasksMessage","ProjectView","match","redirectToProjectList","params","taskDialogOpen","setTaskDialogOpen","deleteAllTaskDialogOpen","setDeleteAllTaskDialogOpen","projectDialogOpen","setProjectDialogOpen","handleOpenTaskDialog","handleCloseTaskDialog","handleOpenProjectDialog","handleCloseProjectDialog","handleUpdateTask","handleUpdateProject","handleAddNewTask","handleTaskFormSubmit","handleTaskClick","handleTaskDelete","handleProjectEditClick","handleOpenDeleteAllTaskDialog","handleCloseDeleteAllTaskDialog","handleDeleteAllTask","reduce","style","DialogTitle","DialogActions","projectList","projectCard","ProjectList","onProjectClick","onNewProject","loadingProjects","setLoadingProjects","setProjects","deleteConfirmationStore","setDeleteConfirmationStore","Promise","all","projectTasks","handleProjectClick","handleNewProject","handleOpenDeleteConfirmation","stopPropagation","handleCloseDeleteConfirmation","handleDeleteProject","p","Fragment","Projects","history","path","redirectToNewProject","push","redirectToProjectView","handleAddNewProject","render","topbar","minHeight","Content","TinyManager","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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F,yBAAKzF,UAAWA,GACd,kBAAC8N,GAAA,EAAD,MACCpE,EACC,kBAAC,GAAD,MAEA,yBAAK1J,UAAWL,EAAQkR,gBACtB,kBAAC7F,GAAA,EAAD,CACEzC,QAAQ,OACRC,eAAe,WACfgB,UAAW,EACXJ,aAAc,GAEd,kBAAC,GAAD,CACEpJ,UAAWL,EAAQmR,YACnBnF,OAAQjO,EACRkO,cAAemG,IAEjB,kBAACzR,EAAA,EAAD,CACEV,MAAM,UACNE,QAAQ,YACRS,QAASgR,GAHX,QAQF,kBAAC,GAAD,CACEjQ,MAAOA,EACPmP,YAAae,EACbd,YAAamB,EACblB,aAAcmB,KAInBb,GACC,kBAAC,GAAD,CACE5C,aAAcjJ,EACdgH,KAAM6E,EACN3C,OAAQA,EACRhB,SAAUqB,EACVtC,QAASiF,MC5NJ,IACb,sGACA,gFACA,wRACA,gNACA,kHACA,2DACA,oFACA,gJACA,8HACA,sPACA,0GACA,yNACA,kKACA,sEACA,0LACA,8EACA,mHACA,kKACA,8HACA,2GACA,sEACA,wJACA,uHACA,2HACA,iEACA,6FACA,2IACA,mIACA,iEACA,uGACA,2HACA,uJACA,qHACA,sFACA,iNACA,4EACA,kEACA,yFACA,wFACA,qHACA,oFACA,2GACA,4HACA,oSACA,gKACA,gIACA,qHACA,yGACA,qOACA,qGACA,mGACA,4GACA,2EACA,6KACA,kGACA,oHACA,oJACA,8JACA,8EACA,kFACA,+HACA,sFACA,6QACA,0FACA,gHACA,+HACA,gHACA,yGACA,uLACA,sHACA,mUACA,4FACA,4GACA,kJACA,mIACA,4JACA,kGACA,uHACA,iHACA,0HACA,wWACA,mEACA,yJACA,sFACA,0HACA,sNACA,kOACA,0MACA,yLACA,+HACA,yFACA,0FACA,2EACA,yFACA,qHACA,4GACA,iCACA,qDACA,uEACA,wDACA,+FACA,+CACA,8KACA,8YACA,iGACA,6XACA,iEACA,gLACA,uGACA,gKACA,qFACA,4GACA,wFACA,gHACA,kMACA,mGACA,2EACA,sFACA,wFACA,iFACA,yEACA,0FACA,qKCzHIU,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","file":"static/js/main.1b146b78.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiIconButton from \"@material-ui/core/IconButton\";\n\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport InvertColors from \"@material-ui/icons/InvertColors\";\nimport Delete from \"@material-ui/icons/Delete\";\n\nconst icons = {\n  filter: FilterListIcon,\n  edit: EditIcon,\n  attachment: AttachFile,\n  invertColors: InvertColors,\n  delete: Delete,\n};\n\nfunction IconButton(props) {\n  const { icon, ...rest } = props;\n  const Icon = icons[icon];\n  return (\n    <MuiIconButton size=\"small\" {...rest}>\n      <Icon />\n    </MuiIconButton>\n  );\n}\n\nIconButton.propTypes = {\n  /** Icon to be displayed */\n  icon: PropTypes.string,\n};\n\nexport default IconButton;\n","import IconButton from \"./IconButton\";\n\nexport default IconButton;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport MuiAppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport IconButton from \"TinyManager/components/IconButton\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst AppBar = withStyles((theme) => ({\n  root: {\n    boxShadow: theme.custom.shadow[0],\n  },\n}))(MuiAppBar);\n\nconst useStyles = makeStyles({\n  title: { flexGrow: 1, cursor: \"pointer\" },\n  logo: {\n    fontSize: \"1.25rem\",\n  },\n});\n\nfunction Topbar(props) {\n  const { onToggleDarkMode } = props;\n\n  const classes = useStyles();\n  return (\n    <AppBar color=\"default\">\n      <Toolbar variant=\"dense\">\n        <Typography\n          color=\"primary\"\n          className={classes.title}\n          component={Link}\n          to=\"/\"\n        >\n          <span role=\"img\" aria-label=\"Ant\" className={classes.logo}>\n            🐜\n          </span>\n          &nbsp;<b>Tiny Manager</b>\n        </Typography>\n        <Button color=\"primary\" size=\"large\" component={Link} to=\"/\">\n          Home\n        </Button>\n        &nbsp;\n        <Button color=\"primary\" size=\"large\" component={Link} to=\"/projects\">\n          Projects\n        </Button>\n        &nbsp;\n        <IconButton\n          icon=\"invertColors\"\n          size=\"small\"\n          color=\"primary\"\n          onClick={onToggleDarkMode}\n        ></IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nTopbar.propTypes = {\n  onToggleDarkMode: PropTypes.func,\n};\n\nexport default Topbar;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"TinyManager\");\n\nfunction initateDB() {\n  db.version(1).stores({\n    projects: \"++id,name\",\n  });\n\n  db.version(1).stores({\n    todos: \"++id,title,completed\",\n  });\n\n  db.version(1).stores({\n    tasks: \"++id,title,projectId\",\n  });\n\n  db.version(1).stores({\n    updates: \"++id,description,projectId,taskId,createdAt\",\n  });\n\n  db.projects.defineClass({ name: String, description: String });\n  db.todos.defineClass({ title: String, completed: Boolean });\n  db.tasks.defineClass({\n    title: String,\n    note: String,\n    priority: Number,\n    progress: Number,\n    projectId: Number,\n  });\n  db.updates.defineClass({\n    description: String,\n    projectId: Number,\n    taskId: Number,\n    createdAt: String,\n  });\n}\n\nfunction getTable(tableName) {\n  const table = db.table(tableName);\n  return {\n    name: table.name,\n  };\n}\n\nasync function find(tableName, query = {}) {\n  const { where } = query;\n\n  let table = db[tableName];\n\n  if (where) {\n    table = table.where(where);\n  }\n\n  return table.reverse().toArray();\n}\n\nfunction findOne(tableName, query) {\n  return db[tableName].get(query);\n}\n\nfunction insert(tableName, record) {\n  return db[tableName]\n    .add(record)\n    .then((recordId) => findOne(tableName, recordId));\n}\n\nfunction update(tableName, record) {\n  return db[tableName].update(record.id, record).then((updateCount) => {\n    if (updateCount) {\n      return findOne(tableName, record.id);\n    } else {\n      return new Error(\"Error updating record\");\n    }\n  });\n}\n\nfunction remove(tableName, record) {\n  return db[tableName].delete(record.id);\n}\n\nfunction removeBulk(tableName, ids) {\n  return db[tableName].bulkDelete(ids);\n}\n\ninitateDB();\n\nexport default {\n  find,\n  findOne,\n  insert,\n  update,\n  remove,\n  removeBulk,\n  getTable,\n};\n","const DEFAULT_NOTES = \"dn\";\nconst DARK_MODE = \"dm\";\nconst NOTES = \"ns\";\n\nfunction setItem(key, value, service) {\n  service.setItem(key, JSON.stringify(value));\n}\n\nfunction getItem(key, service) {\n  try {\n    return JSON.parse(service.getItem(key));\n  } catch (err) {\n    return;\n  }\n}\n\nfunction setDefaultNotes(value, service = localStorage) {\n  setItem(DEFAULT_NOTES, value, service);\n}\n\nfunction getDefaultNotes(service = localStorage) {\n  return getItem(DEFAULT_NOTES, service);\n}\n\nfunction setDarkMode(value, service = localStorage) {\n  setItem(DARK_MODE, value, service);\n}\n\nfunction getDarkMode(service = localStorage) {\n  return getItem(DARK_MODE, service);\n}\n\nfunction setNotes(value, service = localStorage) {\n  setItem(NOTES, value, service);\n}\n\nfunction getNotes(service = localStorage) {\n  return getItem(NOTES, service);\n}\n\nexport default {\n  setDefaultNotes,\n  getDefaultNotes,\n  setDarkMode,\n  getDarkMode,\n  setNotes,\n  getNotes,\n  DEFAULT_NOTES,\n  DARK_MODE,\n  NOTES,\n};\n","import DbService from \"TinyManager/services/DbService\";\nimport LocalStorageService from \"TinyManager/services/LocalStorageService\";\n\nfunction fetchProjects() {\n  return DbService.find(\"projects\");\n}\n\nfunction fetchProject(projectId) {\n  return DbService.findOne(\"projects\", projectId);\n}\n\nfunction fetchTasks(projectId) {\n  return DbService.find(\"tasks\", { where: { projectId } });\n}\n\nfunction fetchTask(taskId) {}\n\nfunction addProject(project) {\n  return DbService.insert(\"projects\", project);\n}\n\nfunction addTask(task) {\n  return DbService.insert(\"tasks\", task);\n}\n\nfunction updateProject(projectId, project) {\n  return DbService.update(\"projects\", project);\n}\n\nfunction updateTask(taskId, task) {\n  return DbService.update(\"tasks\", task);\n}\n\nfunction removeProject(projectId) {\n  return DbService.remove(\"projects\", { id: projectId });\n}\n\nfunction removeTask(taskId) {\n  return DbService.remove(\"tasks\", { id: taskId });\n}\n\nfunction removeBulkTask(taskIds) {\n  return DbService.removeBulk(\"tasks\", taskIds);\n}\n\nfunction fetchTodos() {\n  return DbService.find(\"todos\");\n}\n\nfunction addTodo(todo) {\n  return DbService.insert(\"todos\", todo);\n}\n\nfunction updateTodo(todo) {\n  return DbService.update(\"todos\", todo);\n}\n\nfunction removeTodo(todo) {\n  return DbService.remove(\"todos\", todo);\n}\n\nfunction fetchNotes() {\n  return LocalStorageService.getNotes();\n}\n\nfunction updateNotes(notes) {\n  return LocalStorageService.setNotes(notes);\n}\n\nfunction updateDefaultNotes(value) {\n  LocalStorageService.setDefaultNotes(value);\n}\n\nfunction fetchDefaultNotes() {\n  return LocalStorageService.getDefaultNotes();\n}\n\nfunction updateDarkMode(value) {\n  LocalStorageService.setDarkMode(value);\n}\n\nfunction fetchDarkMode() {\n  return LocalStorageService.getDarkMode();\n}\n\nexport default {\n  fetchProjects,\n  fetchProject,\n  fetchTasks,\n  fetchTask,\n  addProject,\n  addTask,\n  updateProject,\n  updateTask,\n  removeTodo,\n  removeProject,\n  removeTask,\n  removeBulkTask,\n  fetchTodos,\n  addTodo,\n  updateTodo,\n  fetchNotes,\n  updateNotes,\n  updateDefaultNotes,\n  fetchDefaultNotes,\n  updateDarkMode,\n  fetchDarkMode,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport {\n  indigo,\n  orange,\n  grey,\n  red,\n  deepOrange,\n} from \"@material-ui/core/colors\";\n\nimport TinyManagerAPI from \"TinyManager/services/TinyManagerAPI\";\n\nconst ThemeContext = React.createContext();\n\nfunction ThemeProvider(props) {\n  const { children, darkMode: darkModeProp = false } = props;\n\n  const [darkMode, setDarkMode] = React.useState(\n    darkModeProp || TinyManagerAPI.fetchDarkMode()\n  );\n\n  const toggleDarkMode = React.useCallback(() => {\n    setDarkMode((darkMode) => {\n      TinyManagerAPI.updateDarkMode(!darkMode);\n      return !darkMode;\n    });\n  }, []);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n      primary: darkMode ? orange : indigo,\n      secondary: grey,\n      error: darkMode ? deepOrange : red,\n    },\n    typography: {\n      fontFamily: \"'Fira Sans', sans-serif\",\n    },\n    props: {\n      MuiTextField: {\n        variant: \"outlined\",\n      },\n    },\n    overrides: {\n      MuiButton: { root: { textTransform: \"none\" } },\n    },\n    custom: {\n      shadow: [\"0px 0px 30px rgba(0,0,0,0.2)\"],\n    },\n  });\n\n  return (\n    <ThemeContext.Provider value={{ toggleDarkMode }}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport const useTheme = () => React.useContext(ThemeContext);\n\nThemeProvider.propTypes = {\n  /**\n   * Children of theme provider ( element )\n   */\n  children: PropTypes.element,\n  /**\n   * Darkmode theme type boolean\n   */\n  darkMode: PropTypes.bool,\n};\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport Topbar from \"TinyManager/components/Topbar\";\nimport { useTheme } from \"TinyManager/services/ThemeProvider\";\n\nfunction TopbarContainer() {\n  const { toggleDarkMode } = useTheme();\n  return <Topbar onToggleDarkMode={toggleDarkMode} />;\n}\n\nexport default TopbarContainer;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"inherit\",\n    width: \"inherit\",\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  top: {\n    color: \"transparent\",\n  },\n  bottom: {\n    color: theme.palette.primary.main,\n    animationDuration: \"250ms\",\n    position: \"absolute\",\n  },\n}));\n\nfunction Loader(props) {\n  const { className } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)}>\n      <CircularProgress\n        variant=\"determinate\"\n        value={100}\n        className={classes.top}\n        size={24}\n        thickness={4}\n        {...props}\n      />\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.bottom}\n        size={24}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  );\n}\n\nLoader.propTypes = {\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n};\n\nexport default Loader;\n","import Loader from \"./Loader\";\n\nexport default Loader;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, TextField, Typography, IconButton } from \"@material-ui/core\";\nimport {\n  SaveAlt as DownloadIcon,\n  DeleteForever as ClearIcon,\n} from \"@material-ui/icons\";\nimport debounce from \"lodash.debounce\";\n\nimport Loader from \"TinyManager/components/Loader\";\nimport TinyManagerAPI from \"TinyManager/services/TinyManagerAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  action: {\n    marginBottom: theme.spacing(1),\n  },\n  caption: {\n    display: \"block\",\n    textAlign: \"right\",\n    marginTop: theme.spacing(1),\n  },\n}));\n\nfunction Notes() {\n  const classes = useStyles();\n\n  const [notes, setNotes] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(true);\n\n  const handleUpdateStorage = React.useMemo(\n    () => debounce(TinyManagerAPI.updateNotes, 150),\n    []\n  );\n\n  const handleChange = React.useCallback(\n    (e) => {\n      const { value } = e.target;\n      setNotes(value);\n      handleUpdateStorage(value);\n    },\n    [handleUpdateStorage]\n  );\n\n  const handleDownloadNote = React.useCallback(() => {\n    const url = window.URL.createObjectURL(new Blob([notes]), {\n      type: \"text/plain\",\n    });\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"Notes.txt\");\n    link.click();\n  }, [notes]);\n\n  const handleClearNote = React.useCallback(() => {\n    handleChange({ target: { value: \"\" } });\n  }, [handleChange]);\n\n  React.useEffect(() => {\n    const notes = TinyManagerAPI.fetchNotes();\n    if (notes) {\n      setNotes(notes);\n    }\n    setLoading(false);\n  }, []);\n\n  return (\n    <>\n      <Box\n        className={classes.action}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"flex-end\"\n      >\n        {loading && (\n          <IconButton>\n            <Loader />\n          </IconButton>\n        )}\n        <IconButton\n          disabled={loading}\n          onClick={handleDownloadNote}\n          color=\"primary\"\n          size=\"small\"\n          title=\"Download Note\"\n        >\n          <DownloadIcon />\n        </IconButton>\n        <IconButton\n          disabled={loading}\n          onClick={handleClearNote}\n          size=\"small\"\n          title=\"Clear Note\"\n        >\n          <ClearIcon />\n        </IconButton>\n      </Box>\n      <TextField\n        onChange={handleChange}\n        value={notes}\n        rows={20}\n        rowsMax={20}\n        placeholder=\"You can enter your notes here...\"\n        multiline\n        fullWidth\n        autoFocus\n      />\n      <Typography\n        className={classes.caption}\n        color=\"textSecondary\"\n        variant=\"caption\"\n      >\n        *Notes will be stored locally on the browser and will be persisted.\n      </Typography>\n    </>\n  );\n}\n\nexport default Notes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport IconButton from \"TinyManager/components/IconButton\";\n\nfunction TodoFilter(props) {\n  const { active, onFilterClick, ...rest } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuClick = (filter) => () => {\n    handleClose();\n    onFilterClick && onFilterClick(filter);\n  };\n\n  return (\n    <>\n      <IconButton icon=\"filter\" onClick={handleClick} {...rest} />\n      <Menu\n        keepMounted\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {[\n          { value: \"all\", label: \"All\" },\n          { value: \"pending\", label: \"Pending\" },\n          { value: \"completed\", label: \"Completed\" },\n        ].map((item) => (\n          <MenuItem\n            key={item.value}\n            selected={active === item.value}\n            onClick={handleMenuClick(item.value)}\n          >\n            {item.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n\nTodoFilter.propTypes = {\n  active: PropTypes.string,\n  onFilterClick: PropTypes.any,\n};\n\nexport default TodoFilter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { TodoType } from \"TinyManager/types\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    padding: theme.spacing(2),\n    height: \"auto\",\n  },\n}));\n\nfunction TodoForm(props) {\n  const {\n    title,\n    values,\n    errors,\n    disabled,\n    onChange,\n    onSubmit,\n    onCancel,\n  } = props;\n\n  const classes = useStyles();\n  return (\n    <form onSubmit={onSubmit} className={classes.form} noValidate>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>\n            {title}\n          </Typography>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            margin=\"dense\"\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            disabled={disabled}\n            value={values.title}\n            error={Boolean(errors.title)}\n            helperText={errors.title}\n            onChange={onChange}\n            fullWidth\n            required\n            autoFocus\n          />\n        </Grid>\n        <Grid item xs={12} align=\"right\">\n          <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\n            Cancel\n          </Button>\n          &nbsp;\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={disabled}\n          >\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nTodoForm.propTypes = {\n  title: PropTypes.string,\n  values: TodoType,\n  errors: TodoType,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n\nTodoForm.defaultProps = {\n  title: \"Add Todo\",\n  values: {},\n  errors: {},\n  disabled: false,\n  onSubmit: (e) => e.preventDefault(),\n  onChange: () => {},\n  onCancel: () => {},\n};\n\nexport default TodoForm;\n","import PropTypes from \"prop-types\";\n\nexport const ProjectType = PropTypes.shape({\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  description: PropTypes.string,\n});\n\nexport const TaskType = PropTypes.shape({\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  note: PropTypes.string,\n  priority: PropTypes.number,\n  progress: PropTypes.number,\n});\n\nexport const TodoType = PropTypes.shape({\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n});\n\nexport default {\n  ProjectType,\n  TaskType,\n  TodoType,\n};\n","import TodoForm from \"./TodoForm\";\n\nexport default TodoForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogContent } from \"@material-ui/core\";\n\nimport TodoForm from \"TinyManager/components/TodoForm\";\nimport { TodoType } from \"TinyManager/types\";\n\nfunction TodoFormDialog(props) {\n  const { initialValue, open, saving, onClose, onSubmit } = props;\n\n  const [{ todo, errors }, setStore] = React.useState({\n    todo: Object.assign({}, initialValue),\n    errors: {},\n  });\n\n  const handleChange = React.useCallback((e) => {\n    const { name, value } = e.target;\n    setStore((store) => ({\n      ...store,\n      todo: { ...store.todo, [name]: value },\n    }));\n  }, []);\n\n  const handleSubmit = React.useCallback(\n    (e) => {\n      e.preventDefault();\n\n      if (!todo.title) {\n        setStore((store) => ({\n          ...store,\n          errors: { title: \"Title is required.\" },\n        }));\n        return;\n      }\n\n      if (Object.keys(errors).length) {\n        setStore((store) => ({ ...store, errors: {} }));\n      }\n\n      onSubmit(todo);\n      setStore((store) => ({ ...store, todo: { title: \"\" } }));\n    },\n    [todo, errors, onSubmit]\n  );\n\n  return (\n    <Dialog fullWidth={true} maxWidth=\"sm\" open={open} onClose={onClose}>\n      <DialogContent>\n        <TodoForm\n          values={todo}\n          errors={errors}\n          disabled={saving}\n          onChange={handleChange}\n          onCancel={onClose}\n          onSubmit={handleSubmit}\n        />\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nTodoFormDialog.propTypes = {\n  initialValue: TodoType,\n  open: PropTypes.bool,\n  saving: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default TodoFormDialog;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport IconButton from \"TinyManager/components/IconButton\";\nimport { TodoType } from \"TinyManager/types\";\n\nconst useStyles = makeStyles({\n  listItemContainer: {\n    listStyle: \"none\",\n  },\n});\n\nfunction Todo(props) {\n  const { todo, divider, onClick, onCheck, onDelete } = props;\n  const { title, completed } = todo;\n\n  const classes = useStyles();\n\n  const handleCheck = React.useCallback(\n    (e) => {\n      onCheck(e, todo);\n    },\n    [onCheck, todo]\n  );\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete(e, todo);\n    },\n    [onDelete, todo]\n  );\n\n  const handleClick = React.useCallback(\n    (e) => {\n      onClick(e, todo);\n    },\n    [onClick, todo]\n  );\n\n  return (\n    <ListItem\n      ContainerProps={{ className: classes.listItemContainer }}\n      divider={divider}\n      button\n      dense\n    >\n      <ListItemIcon>\n        <Checkbox\n          color=\"primary\"\n          edge=\"start\"\n          checked={completed}\n          disableRipple\n          onChange={handleCheck}\n        />\n      </ListItemIcon>\n      <ListItemText\n        onClick={handleClick}\n        primary={title}\n        primaryTypographyProps={{\n          color: completed ? \"textSecondary\" : \"initial\",\n        }}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          icon=\"delete\"\n          edge=\"end\"\n          size=\"small\"\n          onClick={handleDelete}\n        ></IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nTodo.propTypes = {\n  /**\n   * Todo\n   */\n  todo: TodoType,\n  /**\n   * Divider beneath todo\n   */\n  divider: PropTypes.bool,\n  /**\n   * Todo on check handler\n   */\n  onCheck: PropTypes.func,\n  /**\n   * Todo on delete handler\n   */\n  onDelete: PropTypes.func,\n  /**\n   * Todo on click handler\n   */\n  onClick: PropTypes.func,\n};\n\nTodo.defaultProps = {\n  todo: {},\n  divider: true,\n  onCheck: () => {},\n  onDelete: () => {},\n  onClick: () => {},\n};\n\nexport default Todo;\n","import Todo from \"./Todo\";\n\nexport default Todo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Todo from \"../Todo\";\nimport { TodoType } from \"TinyManager/types\";\n\nconst useStyles = makeStyles({\n  list: {\n    overflow: \"auto\",\n    height: \"95%\",\n  },\n});\n\nfunction TodoList(props) {\n  const { todos, onTodoClick, onTodoCheck, onTodoDelete } = props;\n\n  const classes = useStyles();\n\n  if (todos.length === 0) {\n    return <Typography>Nothing to be completed. Enjoy your day.</Typography>;\n  }\n\n  return (\n    <List className={classes.list}>\n      {todos.map((todo) => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          onClick={onTodoClick}\n          onCheck={onTodoCheck}\n          onDelete={onTodoDelete}\n        />\n      ))}\n    </List>\n  );\n}\n\nTodoList.propTypes = {\n  /**\n   * List of todos\n   */\n  todos: PropTypes.arrayOf(TodoType),\n  /**\n   * Todo on click handler\n   */\n  onTodoClick: PropTypes.func,\n  /**\n   * Todo on check handler\n   */\n  onTodoCheck: PropTypes.func,\n  /**\n   * Todo on delete handler\n   */\n  onTodoDelete: PropTypes.func,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n  onTodoClick: () => {},\n  onTodoCheck: () => {},\n};\n\nexport default TodoList;\n","import TodoList from \"./TodoList\";\n\nexport default TodoList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\n\nimport TodosFilter from \"./TodoFilter\";\nimport TodoFormDialog from \"./TodoFormDialog\";\nimport Loader from \"TinyManager/components/Loader\";\nimport TodoList from \"TinyManager/components/TodoList\";\nimport TinyManagerAPI from \"TinyManager/services/TinyManagerAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  todosContainer: {\n    height: \"100%\",\n    textAlign: \"right\",\n  },\n  todosFilter: {\n    marginRight: theme.spacing(),\n  },\n}));\n\nfunction Todos(props) {\n  const { className } = props;\n\n  const [\n    { todos, todo, loading, saving, dialogOpen },\n    setStore,\n  ] = React.useState({\n    todos: [],\n    todo: { title: \"\" },\n    loading: false,\n    saving: false,\n    dialogOpen: false,\n  });\n\n  const [filter, setFilter] = React.useState(\"all\");\n\n  const classes = useStyles();\n\n  const filterTodos = React.useCallback(\n    (todos = []) => {\n      switch (filter) {\n        case \"completed\":\n          return todos.filter((t) => t.completed);\n        case \"pending\":\n          return todos.filter((t) => !t.completed);\n        default:\n          return todos;\n      }\n    },\n    [filter]\n  );\n\n  const fetchTodos = React.useCallback(() => {\n    setStore((store) => ({ ...store, loading: true }));\n\n    TinyManagerAPI.fetchTodos().then((todos) => {\n      setStore((store) => ({\n        ...store,\n        todos: filterTodos(todos),\n        loading: false,\n      }));\n    });\n  }, [filterTodos]);\n\n  const handleOpenDialog = React.useCallback((e, todo = {}) => {\n    setStore((store) => ({ ...store, dialogOpen: true, todo: { ...todo } }));\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setStore((store) => ({\n      ...store,\n      dialogOpen: false,\n      todo: { title: \"\" },\n      errors: {},\n    }));\n  }, []);\n\n  const handleAddNewTodoClick = React.useCallback(\n    (e) => {\n      handleOpenDialog(e, { title: \"\" });\n    },\n    [handleOpenDialog]\n  );\n\n  const handleTodoClick = React.useCallback(\n    (e, todo) => {\n      handleOpenDialog(e, todo);\n    },\n    [handleOpenDialog]\n  );\n\n  const handleAddNewTodo = React.useCallback(\n    (todo) => {\n      TinyManagerAPI.addTodo(todo)\n        .then((todo) => {\n          setStore((store) => ({\n            ...store,\n            saving: false,\n            todos: [todo, ...store.todos],\n          }));\n          handleCloseDialog();\n        })\n        .catch(() => {\n          setStore((store) => ({ ...store, saving: false }));\n          alert(\"Error adding todo\");\n        });\n    },\n    [handleCloseDialog]\n  );\n\n  const handleEditTodo = React.useCallback(\n    (todo) => {\n      TinyManagerAPI.updateTodo(todo)\n        .then((todo) => {\n          setStore((store) => {\n            return {\n              ...store,\n              saving: false,\n              todos: store.todos.map((t) => (t.id === todo.id ? todo : t)),\n            };\n          });\n          handleCloseDialog();\n        })\n        .catch(() => {\n          setStore((store) => ({ ...store, saving: false }));\n          alert(\"Error editing todo\");\n        });\n    },\n    [handleCloseDialog]\n  );\n\n  const handleSubmit = React.useCallback(\n    (todo) => {\n      setStore((store) => ({ ...store, saving: true }));\n      if (todo.id) {\n        handleEditTodo(todo);\n      } else {\n        handleAddNewTodo(todo);\n      }\n    },\n    [handleAddNewTodo, handleEditTodo]\n  );\n\n  const handleTodoCheck = React.useCallback((e, todo) => {\n    if (todo && todo.id) {\n      TinyManagerAPI.updateTodo(\n        Object.assign({}, todo, { completed: !todo.completed })\n      ).then(() => {\n        setStore((store) => ({\n          ...store,\n          todos: store.todos.map((t) =>\n            t.id === todo.id ? { ...t, completed: !t.completed } : t\n          ),\n        }));\n      });\n    }\n  }, []);\n\n  const handleTodoDelete = React.useCallback((e, todo) => {\n    if (todo && todo.id) {\n      TinyManagerAPI.removeTodo(todo).then(() => {\n        setStore((store) => ({\n          ...store,\n          todos: store.todos.filter((t) => t.id !== todo.id),\n        }));\n      });\n    }\n  }, []);\n\n  const handleFilterClick = React.useCallback((filter) => {\n    setFilter(filter);\n  }, []);\n\n  React.useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n\n  return (\n    <div className={className}>\n      <Divider />\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className={classes.todosContainer}>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            marginTop={1}\n            marginBottom={1}\n          >\n            <TodosFilter\n              className={classes.todosFilter}\n              active={filter}\n              onFilterClick={handleFilterClick}\n            />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleAddNewTodoClick}\n            >\n              Add\n            </Button>\n          </Box>\n          <TodoList\n            todos={todos}\n            onTodoClick={handleTodoClick}\n            onTodoCheck={handleTodoCheck}\n            onTodoDelete={handleTodoDelete}\n          />\n        </div>\n      )}\n      {dialogOpen && (\n        <TodoFormDialog\n          initialValue={todo}\n          open={dialogOpen}\n          saving={saving}\n          onSubmit={handleSubmit}\n          onClose={handleCloseDialog}\n        />\n      )}\n    </div>\n  );\n}\n\nTodos.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Todos;\n","export default [\n  \"“All our dreams can come true, if we have the courage to pursue them.” – Walt Disney\",\n  \"“The secret of getting ahead is getting started.” – Mark Twain\",\n  \"“I’ve missed more than 9,000 shots in my career. I’ve lost almost 300 games. 26 times I’ve been trusted to take the game winning shot and missed. I’ve failed over and over and over again in my life and that is why I succeed.” – Michael Jordan\",\n  \"“Don’t limit yourself. Many people limit themselves to what they think they can do. You can go as far as your mind lets you. What you believe, remember, you can achieve.” – Mary Kay Ash\",\n  \"“The best time to plant a tree was 20 years ago. The second best time is now.” – Chinese Proverb\",\n  \"“Only the paranoid survive.” – Andy Grove\",\n  \"“It’s hard to beat a person who never gives up.” – Babe Ruthu\",\n  \"“I wake up every morning and think to myself, ‘how far can I push this company in the next 24 hours.’” – Leah Busque\",\n  \"“If people are doubting how far you can go, go so far that you can’t hear them anymore.” – Michele Ruiz\",\n  \"“We need to accept that we won’t always make the right decisions, that we’ll screw up royally sometimes – understanding that failure is not the opposite of success, it’s part of success.” – Arianna Huffington\",\n  \"“Write it. Shoot it. Publish it. Crochet it, sauté it, whatever. MAKE.” – Joss Whedon\",\n  \"“You’ve gotta dance like there’s nobody watching, love like you’ll never be hurt, sing like there’s nobody listening, and live like it’s heaven on earth.” ― William W. Purkey\",\n  \"“Fairy tales are more than true: not because they tell us that dragons exist, but because they tell us that dragons can be beaten.”― Neil Gaiman\",\n  \"“Everything you can imagine is real.”― Pablo Picasso\",\n  \"“When one door of happiness closes, another opens; but often we look so long at the closed door that we do not see the one which has been opened for us.” ― Helen Keller\",\n  \"“Do one thing every day that scares you.”― Eleanor Roosevelt\",\n  \"“It’s no use going back to yesterday, because I was a different person then.”― Lewis Carroll\",\n  \"“Smart people learn from everything and everyone, average people from their experiences, stupid people already have all the answers.” – Socrates\",\n  \"“Do what you feel in your heart to be right – for you’ll be criticized anyway.”― Eleanor Roosevelt\",\n  \"“Happiness is not something ready made. It comes from your own actions.” ― Dalai Lama XIV\",\n  \"“Whatever you are, be a good one.” ― Abraham Lincoln\",\n  \"“The same boiling water that softens the potato hardens the egg. It’s what you’re made of. Not the circumstances.” – Unknown\",\n  \"“If we have the attitude that it’s going to be a great day it usually is.” – Catherine Pulsifier\",\n  \"“You can either experience the pain of discipline or the pain of regret. The choice is yours.”  – Unknown\",\n  \"“Impossible is just an opinion.” – Paulo Coelho\",\n  \"“Your passion is waiting for your courage to catch up.” – Isabelle Lafleche\",\n  \"“Magic is believing in yourself. If you can make that happen, you can make anything happen.” – Johann Wolfgang Von Goethe\",\n  \"“If something is important enough, even if the odds are stacked against you, you should still do it.” – Elon Musk\",\n  \"“Hold the vision, trust the process.” – Unknown\",\n  \"“Don’t be afraid to give up the good to go for the great.” – John D. Rockefeller\",\n  \"“People who wonder if the glass is half empty or full miss the point. The glass is refillable.” – Unknown\",\n  \"“No one is to blame for your future situation but yourself. If you want to be successful, then become “Successful.”― Jaymin Shah\",\n  \"“Things may come to those who wait, but only the things left by those who hustle.”― Abraham Lincoln\",\n  \"“Everything comes to him who hustles while he waits.”― Thomas Edison\",\n  \"“Every sucessful person in the world is a hustler one way or another. We all hustle to get where we need to be. Only a fool would sit around and wait on another man to feed him.” ― K’wan\",\n  \"“Invest in your dreams. Grind now. Shine later.” – Unknown\",\n  \"“Hustlers don’t sleep, they nap.” – Unknown\",\n  \"“Greatness only comes before hustle in the dictionary.” – Ross Simmonds\",\n  \"“Without hustle, talent will only carry you so far.” – Gary Vaynerchuk\",\n  \"“Work like there is someone working twenty four hours a day to take it away from you.” – Mark Cuban\",\n  \"“Hustle in silence and let your success make the noise.” – Unknown\",\n  \"“We are what we repeatedly do. Excellence, then, is not an act, but a habit.” – Aristotle\",\n  \"“If you’re offered a seat on a rocket ship, don’t ask what seat! Just get on.” – Sheryl Sandberg\",\n  \"“I always did something I was a little not ready to do. I think that’s how you grow. When there’s that moment of ‘Wow, I’m not really sure I can do this,’ and you push through those moments, that’s when you have a breakthrough.” – Marissa Mayer\",\n  \"“If you hear a voice within you say ‘you cannot paint,’ then by all means paint and that voice will be silenced.” – Vincent Van Gogh\",\n  \"“How wonderful it is that nobody need wait a single moment before starting to improve the world.” – Anne Frank\",\n  \"“Some people want it to happen, some wish it would happen, others make it happen.” – Michael Jordan\",\n  \"“Great things are done by a series of small things brought together” – Vincent Van Gogh\",\n  \"“If you hire people just because they can do a job, they’ll work for your money. But if you hire people who believe what you believe, they’ll work for you with blood and sweat and tears.” – Simon Sinek\",\n  \"“Very often, a change of self is needed more than a change of scene.’ – A.C. Benson\",\n  \"“Leaders can let you fail and yet not let you be a failure.” – Stanley McChrystal\",\n  \"“It’s not the load that breaks you down, it’s the way you carry it.” – Lou Holtz\",\n  \"“The hard days are what make you stronger.” – Aly Raisman\",\n  \"“If you believe it’ll work out, you’ll see opportunities. If you don’t believe it’ll work out, you’ll see obstacles.” – Wayne Dyer\",\n  \"“Keep your eyes on the stars, and your feet on the ground.” – Theodore Roosevelt\",\n  \"“You can waste your lives drawing lines. Or you can live your life crossing them.” – Shonda Rhimes\",\n  \"“You’ve got to get up every morning with determination if you’re going to go to bed with satisfaction.” – George Lorimer\",\n  \"“I now tried a new hypothesis: It was possible that I was more in charge of my happiness than I was allowing myself to be.” – Michelle Obama\",\n  \"“In a gentle way, you can shake the world.” – Mahatma Gandhi\",\n  \"“If opportunity doesn’t knock, build a door.” – Kurt Cobain\",\n  \"“Don’t be pushed around by the fears in your mind. Be led by the dreams in your heart.” – Roy T. Bennett\",\n  \"“Work hard in silence, let your success be the noise.” – Frank Ocean\",\n  \"“Don’t say you don’t have enough time. You have exactly the same number of hours per day that were given to Helen Keller, Pasteur, Michelangelo, Mother Teresa, Leonardo Da Vinci, Thomas Jefferson, and Albert Einstein.” – H. Jackson Brown Jr.\",\n  \"“Hard work beats talent when talent doesn’t work hard.” – Tim Notke\",\n  \"“If everything seems to be under control, you’re not going fast enough.” – Mario Andretti\",\n  \"“Opportunity is missed by most people because it is dressed in overalls and looks like work.” – Thomas Edison\",\n  \"“The only difference between ordinary and extraordinary is that little extra.” – Jimmy Johnson\",\n  \"“The best way to appreciate your job is to imagine yourself without one.” – Oscar Wilde\",\n  \"“Unsuccessful people make their decisions based on their current situations. Successful people make their decisions based on where they want to be.” – Benjamin Hardy\",\n  \"“Never stop doing your best just because someone doesn’t give you credit.” – Kamari aka Lyrikal\",\n  \"“Work hard for what you want because it won’t come to you without a fight. You have to be strong and courageous and know that you can do anything you put your mind to. If somebody puts you down or criticizes you, just keep on believing in yourself and turn it into something positive.” – Leah LaBelle\",\n  \"“Work hard, be kind, and amazing things will happen.” – Conan O’Brien\",\n  \"“The miracle is not that we do this work, but that we are happy to do it.” – Mother Teresa\",\n  \"“Never give up on a dream just because of the time it will take to accomplish it. The time will pass anyway.” – Earl Nightingale\",\n  \"“If you work on something a little bit every day, you end up with something that is massive.” – Kenneth Goldsmith\",\n  \"“The big secret in life is that there is no secret. Whatever your goal, you can get there if you’re willing to work.” – Oprah Winfrey\",\n  \"“If you cannot do great things, do small things in a great way.” – Napoleon Hill\",\n  \"“Never allow a person to tell you no who doesn’t have the power to say yes.” – Eleanor Roosevelt\",\n  \"At any given moment you have the power to say: this is not how the story is going to end.” – Unknown\",\n  \"“Amateus sit around and wait for inspiration. The rest of us just get up and go to work.” – Stephen King\",\n  \"“Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it.” – Steve Jobs\",\n  \"“Nothing will work unless you do.” – Maya Angelou\",\n  \"“Sometimes when you’re in a dark place you think you’ve been buried but you’ve actually been planted.” – Christine Caine\",\n  \"“Don’t limit your challenges. Challenge your limits.” – Unknown\",\n  \"“Whenever you find yourself doubting how far you can go, just remember how far you have come.” – Unknown\",\n  \"“Everyone has inside them a piece of good news. The good news is you don’t know how great you can be! How much you can love! What you can accomplish! And what your potential is.” – Anne Frank\",\n  \"“Some luck lies in not getting what you thought you wanted but getting what you have, which once you have got it you may be smart enough to see is what you would have wanted had you known.” – Garrison Keillor\",\n  \"“Don’t quit yet, the worst moments are usually followed by the most beautiful silver linings. You have to stay strong, remember to keep your head up and remain hopeful.” – Unknown\",\n  \"“When written in Chinese the word “crisis” is composed of two characters – one represents danger and the other represents opportunity.” – John F Kennedy\",\n  \"“Good. Better. Best. Never let it rest. ‘Til your good is better and your better is best.” – St. Jerome.\",\n  \"“In the middle of every difficulty lies opportunity.” – Albert Einstein\",\n  \"“Start where you are. Use what you have. Do what you can.” – Arthur Ashe\",\n  \"“Dreams don’t work unless you do.” – John C. Maxwell\",\n  \"“Go the extra mile. It’s never crowded there.” – Dr. Wayne D. Dyer\",\n  \"“Keep your face always toward the sunshine – and shadows will fall behind you.” – Walt Whitman\",\n  \"“What defines us is how well we rise after falling.” – Lionel from Maid in Manhattan Movie\",\n  \"H.O.P.E. = Hold On. Pain Ends.\",\n  \"Make each day your masterpiece. – John Wooden\",\n  \"“Wherever you go, go with all your heart” – Confucius\",\n  \"“Turn your wounds into wisdom” – Oprah\",\n  \"“We can do anything we want to if we stick to it long enough.” – Helen Keller\",\n  \"“Begin anywhere.” – John Cage\",\n  \"“Success is no accident. It is hard work, perseverance, learning, studying, sacrifice and most of all, love of what you are doing or learning to do.” – Pele\",\n  \"“Would you like me to give you a formula for success? It’s quite simple, really: Double your rate of failure. You are thinking of failure as the enemy of success. But it isn’t at all. You can be discouraged by failure or you can learn from it, so go ahead and make mistakes. Make all you can. Because remember that’s where you will find success.” – Thomas J. Watson\",\n  \"“Every champion was once a contender that didn’t give up.” – Gabby Douglas\",\n  \"“To be a champion, I think you have to see the big picture. It’s not about winning and losing; it’s about every day hard work and about thriving on a challenge. It’s about embracing the pain that you’ll experience at the end of a race and not being afraid. I think people think too hard and get afraid of a certain challenge.” – Summer Sanders\",\n  \"Don’t dream about success. Get out there and work for it.\",\n  \"“The difference between successful people and very successful people is that very successful people say ‘no’ to almost everything.” – Warren Buffett\",\n  \"You can cry, scream, and bang your head in frustration but keep pushing forward. It’s worth it.\",\n  \"“I hated every minute of training, but I said, ‘Don’t quit. Suffer now and live the rest of your life as a champion.” – Muhammad Ali\",\n  \"“Opportunities don’t happen. You create them.” – Chris Grosser\",\n  \"“Success is liking yourself, liking what you do, and liking how you do it.” – Maya Angelou\",\n  \"“If you obey all the rules, you miss all the fun.” – Katharine Hepburn\",\n  \"“You were born to be a player. You were meant to be here. This moment is yours.” – Herb Brooks\",\n  \"“Life is not what you alone make it. Life is the input of everyone who touched your life and every experience that entered it. We are all part of one another.” – Yuri Kochiyama\",\n  \"“When you reach the end of your rope, tie a knot and hang out.” – Abraham Lincoln\",\n  \"“Never regret anything that made you smile.” – Mark Twain\",\n  \"“You must do the thing you think you cannot do.” – Eleanor Roosevelt\",\n  \"“If you want to fly give up everything that weighs you down.” – Buddha\",\n  \"“Doubt kills more dreams than failure ever will.” – Suzy Kassem\",\n  \"“I never lose. Either I win or learn.” – Nelson Mandela\",\n  \"“Today is your opportunity to build the tomorrow you want.” – Ken Poirot\",\n  \"“Getting over a painful experience is much like crossing the monkey bars. You have to let go at some point in order to move forward.” – C.S. Lewis\",\n];\n","import quotes from \"TinyManager/assets/quotes\";\n\nconst count = quotes.length;\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction getQuote() {\n  const randomNumber = getRandomInt(count - 1);\n  return quotes[randomNumber];\n}\n\nexport default {\n  getQuote,\n};\n","import React from \"react\";\nimport {\n  Fade,\n  Typography,\n  Tabs,\n  Tab,\n  FormControlLabel,\n  Checkbox,\n  Box,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Notes from \"TinyManager/containers/Notes\";\nimport Todos from \"TinyManager/containers/Todos\";\nimport QuoteService from \"TinyManager/services/QuoteService\";\nimport TinyManagerAPI from \"TinyManager/services/TinyManagerAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  todos: {\n    height: \"100%\",\n    overflow: \"hidden\",\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction Home() {\n  const classes = useStyles();\n\n  const defaultNotes = TinyManagerAPI.fetchDefaultNotes();\n\n  const [activeTab, setActiveTab] = React.useState(defaultNotes ? 1 : 0);\n  const [checked, setChecked] = React.useState(defaultNotes);\n  const quote = React.useMemo(() => QuoteService.getQuote(), []);\n\n  const handleChangeActiveTab = React.useCallback((e, value) => {\n    setActiveTab(value);\n  }, []);\n\n  const handleChangeDefaultNotes = React.useCallback((e) => {\n    const { checked } = e.target;\n    setChecked(checked);\n    TinyManagerAPI.updateDefaultNotes(checked);\n  }, []);\n\n  return (\n    <Fade in={true}>\n      <div className={classes.container}>\n        <Typography variant=\"body1\" color=\"textSecondary\" gutterBottom>\n          {quote}\n        </Typography>\n        <Box display=\"flex\" justifyContent=\"flex-end\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={checked}\n                onChange={handleChangeDefaultNotes}\n              />\n            }\n            label=\"Default Notes\"\n          />\n        </Box>\n        <Tabs\n          value={activeTab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChangeActiveTab}\n        >\n          <Tab label=\"Todos\" value={0} />\n          <Tab label=\"Notes\" value={1} />\n        </Tabs>\n        {activeTab === 0 && <Todos className={classes.todos} />}\n        {activeTab === 1 && <Notes />}\n      </div>\n    </Fade>\n  );\n}\n\nexport default Home;\n","import PropTypes from \"prop-types\";\nimport MuiPaper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Paper = withStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    cursor: \"pointer\",\n    boxShadow: theme.custom.shadow[0],\n    borderRadius: theme.spacing(0.5),\n    padding: theme.spacing(),\n    height: theme.spacing(15),\n  },\n}))(MuiPaper);\n\nPaper.displayName = \"Paper\";\n\nPaper.propTypes = {\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n};\n\nexport default Paper;\n","import Paper from './Paper';\n\nexport default Paper;","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@material-ui/core/Box\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"../Paper\";\nimport IconButton from \"../IconButton\";\nimport Types from \"TinyManager/types\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n}));\n\nfunction ProjectCard(props) {\n  const {\n    className,\n    project,\n    progress,\n    onClick,\n    onEdit,\n    onDelete,\n    showEditButton,\n    showDeleteButton,\n  } = props;\n\n  const classes = useStyles();\n\n  const handleClick = React.useCallback(\n    (e) => {\n      onClick && onClick(e, project);\n    },\n    [project, onClick]\n  );\n\n  const handleEdit = React.useCallback(\n    (e) => {\n      onEdit && onEdit(e, project);\n    },\n    [project, onEdit]\n  );\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete && onDelete(e, project);\n    },\n    [project, onDelete]\n  );\n\n  return (\n    <Paper className={clsx(classes.paper, className)} onClick={handleClick}>\n      <Box\n        display=\"flex\"\n        width=\"100%\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Typography variant=\"h4\" color=\"primary\">\n          {project.name}\n        </Typography>\n        <Box display=\"flex\">\n          {showEditButton && <IconButton icon=\"edit\" onClick={handleEdit} />}\n          {showDeleteButton && (\n            <IconButton icon=\"delete\" onClick={handleDelete} />\n          )}\n        </Box>\n      </Box>\n      <Typography\n        variant=\"subtitle1\"\n        title={project.description}\n        className={classes.fullWidth}\n        gutterBottom\n        noWrap\n      >\n        {project.description}\n      </Typography>\n      <LinearProgress\n        variant=\"determinate\"\n        title={`${Math.round(progress)}%`}\n        value={progress}\n        className={classes.fullWidth}\n      />\n    </Paper>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: Types.ProjectType,\n  progress: PropTypes.number,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  showEditButton: PropTypes.bool,\n  showDeleteButton: PropTypes.bool,\n};\n\nProjectCard.defaultProps = {\n  project: {},\n  progress: 0,\n  showEditButton: false,\n};\n\nexport default ProjectCard;\n","import ProjectCard from \"./ProjectCard\";\n\nexport default ProjectCard;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"../Paper\";\nimport IconButton from \"../IconButton\";\nimport { TaskType } from \"TinyManager/types\";\n\nconst PRIORITIES = [\n  {\n    value: 0,\n    label: \"Low\",\n  },\n  {\n    value: 1,\n    label: \"Medium\",\n  },\n  {\n    value: 2,\n    label: \"High\",\n  },\n];\n\nconst PERCENTAGES = new Array(11)\n  .fill(0)\n  .map((_, i) => ({ value: i * 10, label: `${i * 10}%` }));\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    height: \"auto\",\n  },\n}));\n\nfunction TaskForm(props) {\n  const {\n    title,\n    values,\n    errors,\n    disabled,\n    onSubmit,\n    onChange,\n    onCancel,\n  } = props;\n\n  const classes = useStyles();\n  return (\n    <form onSubmit={onSubmit} noValidate>\n      <Paper className={classes.paper}>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n              {title}\n            </Typography>\n            <Divider />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              margin=\"dense\"\n              disabled={disabled}\n              error={Boolean(errors.title)}\n              helperText={errors.title}\n              value={values.title}\n              onChange={onChange}\n              fullWidth\n              required\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl\n              variant=\"outlined\"\n              margin=\"dense\"\n              disabled={disabled}\n              fullWidth\n            >\n              <InputLabel>Priority</InputLabel>\n              <Select\n                label=\"Priority\"\n                margin=\"dense\"\n                name=\"priority\"\n                defaultValue={PRIORITIES[0].value}\n                value={values.priority}\n                onChange={onChange}\n              >\n                {PRIORITIES.map((priority) => (\n                  <MenuItem key={priority.value} value={priority.value}>\n                    {priority.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"note\"\n              name=\"note\"\n              label=\"Note\"\n              rows={4}\n              disabled={disabled}\n              error={Boolean(errors.note)}\n              helperText={errors.note}\n              value={values.note}\n              onChange={onChange}\n              fullWidth\n              multiline\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormControl\n              variant=\"outlined\"\n              margin=\"dense\"\n              disabled={disabled}\n              fullWidth\n            >\n              <InputLabel>Progress</InputLabel>\n              <Select\n                name=\"progress\"\n                label=\"Percentage\"\n                margin=\"dense\"\n                defaultValue={PERCENTAGES[0].value}\n                value={values.progress}\n                onChange={onChange}\n              >\n                {PERCENTAGES.map((percentage) => (\n                  <MenuItem key={percentage.value} value={percentage.value}>\n                    {percentage.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}></Grid>\n          <Grid item xs={12}>\n            <IconButton icon=\"attachment\" />\n          </Grid>\n          <Grid item xs={12} align=\"right\">\n            <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\n              Cancel\n            </Button>\n            &nbsp;\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={disabled}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n}\n\nTaskForm.propTypes = {\n  title: PropTypes.string,\n  disabled: PropTypes.bool,\n  values: TaskType,\n  errors: TaskType,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n\nTaskForm.defaultProps = {\n  values: {},\n  errors: {},\n  disabled: false,\n  title: \"New Task\",\n  onChange: () => {},\n  onSubmit: (e) => {\n    e.preventDefault();\n  },\n  onCancel: () => {},\n};\n\nexport default TaskForm;\n","import TaskForm from \"./TaskForm\";\n\nexport default TaskForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\n\nimport TaskForm from \"TinyManager/components/TaskForm\";\nimport { TaskType } from \"TinyManager/types\";\n\nfunction TaskFormContainer(props) {\n  const { onCancel, onSubmit, initialValues } = props;\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      note: \"\",\n      priority: 0,\n      progress: 0,\n      ...initialValues,\n    },\n    validate: (values) => {\n      const errors = {};\n\n      if (!values.title) {\n        errors.title = \"Title is required.\";\n      }\n\n      return errors;\n    },\n    onSubmit: (values) => {\n      onSubmit(values);\n    },\n    enableReinitialize: true,\n  });\n\n  return (\n    <TaskForm\n      values={formik.values}\n      errors={formik.errors}\n      onCancel={onCancel}\n      disabled={formik.isSubmitting}\n      onSubmit={formik.handleSubmit}\n      onChange={formik.handleChange}\n    />\n  );\n}\n\nTaskFormContainer.propTypes = {\n  initialValues: TaskType,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default TaskFormContainer;\n","import React from \"react\";\nimport {\n  TextField,\n  Button,\n  Grid,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"../Paper\";\nimport { ProjectType } from \"TinyManager/types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    height: \"auto\",\n  },\n}));\n\nfunction ProjectForm(props) {\n  const {\n    title,\n    values,\n    errors,\n    disabled,\n    onSubmit,\n    onChange,\n    onCancel,\n  } = props;\n\n  const classes = useStyles();\n  return (\n    <form onSubmit={onSubmit} noValidate>\n      <Paper className={classes.paper}>\n        <Grid container justify=\"center\" spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n              {title}\n            </Typography>\n            <Divider />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              id=\"name\"\n              name=\"name\"\n              label=\"Name\"\n              margin=\"dense\"\n              disabled={disabled}\n              error={Boolean(errors.name)}\n              helperText={errors.name}\n              value={values.name}\n              onChange={onChange}\n              fullWidth\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              id=\"description\"\n              name=\"description\"\n              label=\"Description\"\n              rows={4}\n              disabled={disabled}\n              error={Boolean(errors.description)}\n              helperText={errors.description}\n              value={values.description}\n              onChange={onChange}\n              fullWidth\n              multiline\n            />\n          </Grid>\n          <Grid item xs={12} align=\"right\">\n            <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\n              Cancel\n            </Button>\n            &nbsp;\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={disabled}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n}\n\nProjectForm.propTypes = {\n  /**\n   * Title of the form\n   */\n  title: PropTypes.string,\n  /**\n   * Values of the form\n   */\n  values: ProjectType,\n  /**\n   * Errors in the form\n   */\n  errors: ProjectType,\n  /**\n   * Disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Input on change handler\n   */\n  onChange: PropTypes.func,\n  /**\n   * Form on submit handler\n   */\n  onSubmit: PropTypes.func,\n  /**\n   * Form cancel handler\n   */\n  onCancel: PropTypes.func,\n};\n\nProjectForm.defaultProps = {\n  values: {},\n  errors: {},\n  disabled: false,\n  title: \"New Project\",\n  onChange: () => {},\n  onSubmit: (e) => {\n    e.preventDefault();\n  },\n  onCancel: () => {},\n};\n\nexport default ProjectForm;\n","import ProjectForm from \"./ProjectForm\";\n\nexport default ProjectForm;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport PropTypes from \"prop-types\";\n\nimport ProjectForm from \"TinyManager/components/ProjectForm\";\nimport { ProjectType } from \"TinyManager/types/index\";\n\nfunction ProjectFormContainer(props) {\n  const { onCancel, onSubmit, initialValues } = props;\n\n  const handleCancel = React.useCallback(() => {\n    onCancel();\n  }, [onCancel]);\n\n  const handleSubmit = React.useCallback(\n    (values) => {\n      onSubmit(values);\n    },\n    [onSubmit]\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      description: \"\",\n      ...initialValues,\n    },\n    validate: (values) => {\n      const errors = {};\n\n      if (!values.name) {\n        errors.name = \"Name is required.\";\n      }\n\n      return errors;\n    },\n    onSubmit: (values, { setSubmitting }) => {\n      handleSubmit(values);\n      setSubmitting(false);\n    },\n  });\n\n  return (\n    <ProjectForm\n      values={formik.values}\n      errors={formik.errors}\n      onCancel={handleCancel}\n      onChange={formik.handleChange}\n      onSubmit={formik.handleSubmit}\n      disabled={formik.isSubmitting}\n    />\n  );\n}\n\nProjectFormContainer.propTypes = {\n  initialValues: ProjectType,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default ProjectFormContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(() => ({\n  progress: {\n    fontSize: \"0.60rem\",\n  },\n}));\n\nfunction CircularProgressWithLabel(props) {\n  const classes = useStyles();\n\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"static\" size={30} {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          className={classes.progress}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nCircularProgressWithLabel.defaultProps = {\n  value: 0,\n};\n\nexport default CircularProgressWithLabel;\n","import CircularProgressWithLabel from \"./CircularProgressWithLabel\";\n\nexport default CircularProgressWithLabel;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\n\nimport Paper from \"../Paper\";\nimport CircularProgressWithLabel from \"../CircularProgressWithLabel\";\nimport { TaskType } from \"TinyManager/types/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    height: theme.spacing(7),\n    alignItems: \"center\",\n  },\n  mediumPriority: {\n    color: theme.palette.type === \"dark\" && theme.palette.warning.light,\n    backgroundColor:\n      theme.palette.type === \"light\" && theme.palette.warning.light,\n  },\n  highPriority: {\n    color: theme.palette.type === \"dark\" && theme.palette.error.light,\n    backgroundColor:\n      theme.palette.type === \"light\" && theme.palette.error.light,\n  },\n  progress: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n  },\n  completedFlag: {\n    color: theme.palette.success.light,\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nfunction TaskCard(props) {\n  const { task, onClick, onDelete, className } = props;\n  const { priority = 0 } = task;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleClick = React.useCallback(\n    (e) => {\n      onClick(e, task);\n    },\n    [onClick, task]\n  );\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete(e, task);\n    },\n    [onDelete, task]\n  );\n\n  return (\n    <Paper\n      classes={{\n        root: clsx(\n          classes.paper,\n          priority === 1 && classes.mediumPriority,\n          priority === 2 && classes.highPriority,\n          className\n        ),\n      }}\n    >\n      <Grid container alignItems=\"center\">\n        <Grid item xs={9} onClick={handleClick}>\n          <Box display=\"flex\" alignItems=\"center\">\n            {task.progress === 100 ? (\n              <FlagIcon className={classes.completedFlag} />\n            ) : null}\n            <Typography\n              className={clsx(priority === 1 && classes.mediumPriority)}\n            >\n              {task.title}\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid\n          item\n          xs={2}\n          align=\"right\"\n          className={classes.progress}\n          onClick={handleClick}\n        >\n          <CircularProgressWithLabel\n            color={\n              priority === 0\n                ? \"primary\"\n                : theme.palette.type === \"dark\"\n                ? \"inherit\"\n                : \"secondary\"\n            }\n            value={task.progress}\n          />\n        </Grid>\n        <Grid item xs={1} align=\"right\">\n          <IconButton size=\"small\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nTaskCard.propTypes = {\n  /**\n   * Task details\n   */\n  task: TaskType,\n  /**\n   * Task click handler\n   */\n  onClick: PropTypes.func,\n  /**\n   * Task delete handler\n   */\n  onDelete: PropTypes.func,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n};\n\nTaskCard.defaultProps = {\n  task: {},\n  onClick: () => {},\n  onDelete: () => {},\n};\n\nexport default TaskCard;\n","import TaskCard from \"./TaskCard\";\n\nexport default TaskCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  Fade,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport ProjectCard from \"TinyManager/components/ProjectCard\";\nimport TinyManagerAPI from \"TinyManager/services/TinyManagerAPI\";\nimport Loader from \"TinyManager/components/Loader\";\nimport TaskFormContainer from \"TinyManager/containers/Projects/TaskForm\";\nimport ProjectFormContainer from \"TinyManager/containers/Projects/ProjectForm\";\nimport TaskCard from \"TinyManager/components/TaskCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  taskCard: {\n    marginBottom: theme.spacing(2),\n  },\n  noTasksMessage: {\n    marginTop: theme.spacing(),\n  },\n}));\n\nfunction ProjectView(props) {\n  const { match, redirectToProjectList } = props;\n  const { params } = match;\n  const { projectId } = params;\n\n  const classes = useStyles();\n\n  const [{ loading, project, tasks, task }, setStore] = React.useState({\n    loading: true,\n    project: {},\n    tasks: [],\n    task: {},\n  });\n\n  const [taskDialogOpen, setTaskDialogOpen] = React.useState(false);\n\n  const [deleteAllTaskDialogOpen, setDeleteAllTaskDialogOpen] = React.useState(\n    false\n  );\n\n  const [projectDialogOpen, setProjectDialogOpen] = React.useState(false);\n\n  const handleOpenTaskDialog = React.useCallback(() => {\n    setTaskDialogOpen(true);\n  }, []);\n\n  const handleCloseTaskDialog = React.useCallback(() => {\n    setTaskDialogOpen(false);\n    setStore((store) => ({ ...store, task: {} }));\n  }, []);\n\n  const handleOpenProjectDialog = React.useCallback(() => {\n    setProjectDialogOpen(true);\n  }, []);\n\n  const handleCloseProjectDialog = React.useCallback(() => {\n    setProjectDialogOpen(false);\n  }, []);\n\n  const handleUpdateTask = React.useCallback(\n    (task) => {\n      TinyManagerAPI.updateTask(task.id, task).then((task) => {\n        setStore((store) => ({\n          ...store,\n          tasks: store.tasks.map((t) => (t.id === task.id ? task : t)),\n        }));\n        handleCloseTaskDialog();\n      });\n    },\n    [handleCloseTaskDialog]\n  );\n\n  const handleUpdateProject = React.useCallback(\n    (project) => {\n      TinyManagerAPI.updateProject(project.id, project).then((project) => {\n        setStore((store) => ({\n          ...store,\n          project,\n        }));\n        handleCloseProjectDialog();\n      });\n    },\n    [handleCloseProjectDialog]\n  );\n\n  const handleAddNewTask = React.useCallback(\n    (task) => {\n      TinyManagerAPI.addTask(\n        Object.assign({ projectId: Number(projectId) }, task)\n      ).then((task) => {\n        setStore((store) => ({ ...store, tasks: [task, ...store.tasks] }));\n        handleCloseTaskDialog();\n      });\n    },\n    [handleCloseTaskDialog, projectId]\n  );\n\n  const handleTaskFormSubmit = React.useCallback(\n    (task) => {\n      if (task.id) {\n        handleUpdateTask(task);\n      } else {\n        handleAddNewTask(task);\n      }\n    },\n    [handleUpdateTask, handleAddNewTask]\n  );\n\n  const handleTaskClick = React.useCallback(\n    (e, task = {}) => {\n      setStore((store) => ({ ...store, task }));\n      handleOpenTaskDialog();\n    },\n    [handleOpenTaskDialog]\n  );\n\n  const handleTaskDelete = React.useCallback((e, task) => {\n    TinyManagerAPI.removeTask(task.id);\n    setStore((store) => ({\n      ...store,\n      tasks: store.tasks.filter((t) => t.id !== task.id),\n    }));\n  }, []);\n\n  const handleProjectEditClick = React.useCallback(() => {\n    handleOpenProjectDialog();\n  }, [handleOpenProjectDialog]);\n\n  const handleOpenDeleteAllTaskDialog = React.useCallback(() => {\n    setDeleteAllTaskDialogOpen(true);\n  }, []);\n\n  const handleCloseDeleteAllTaskDialog = React.useCallback(() => {\n    setDeleteAllTaskDialogOpen(false);\n  }, []);\n\n  const handleDeleteAllTask = React.useCallback(() => {\n    if (tasks.length) {\n      TinyManagerAPI.removeBulkTask(tasks.map(({ id }) => id)).then(() => {\n        setStore((store) => ({ ...store, tasks: [] }));\n        handleCloseDeleteAllTaskDialog();\n      });\n    }\n  }, [handleCloseDeleteAllTaskDialog, tasks]);\n\n  React.useEffect(() => {\n    if (projectId) {\n      setStore((store) => ({ ...store, loading: true }));\n      TinyManagerAPI.fetchProject(Number(projectId))\n        .then((project) => {\n          TinyManagerAPI.fetchTasks(Number(projectId)).then((tasks) => {\n            setStore((store) => ({ ...store, loading: false, project, tasks }));\n          });\n        })\n        .catch(redirectToProjectList);\n    } else {\n      setStore((store) => ({ ...store, loading: false }));\n      redirectToProjectList();\n    }\n  }, [projectId, redirectToProjectList]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <Fade in={true}>\n      <div>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <ProjectCard\n              project={project}\n              showEditButton={true}\n              onEdit={handleProjectEditClick}\n              progress={\n                tasks && tasks.length\n                  ? tasks.reduce(\n                      (progress, task) =>\n                        progress +\n                        ((100 / tasks.length) * Number(task.progress)) / 100,\n                      0\n                    )\n                  : 0\n              }\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleOpenTaskDialog}\n            >\n              Add New Task\n            </Button>\n            &nbsp;&nbsp;\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={handleOpenDeleteAllTaskDialog}\n            >\n              Delete All\n            </Button>\n          </Grid>\n        </Grid>\n        {tasks && tasks.length ? (\n          <div\n            style={{ height: \"85%\", padding: `32px 32px`, overflow: \"auto\" }}\n          >\n            {tasks.map((task) => (\n              <TaskCard\n                task={task}\n                key={task.id}\n                className={classes.taskCard}\n                onClick={handleTaskClick}\n                onDelete={handleTaskDelete}\n              />\n            ))}\n          </div>\n        ) : (\n          <Typography variant=\"body1\" className={classes.noTasksMessage}>\n            No available tasks.\n          </Typography>\n        )}\n        <Dialog open={taskDialogOpen} onClose={handleCloseTaskDialog}>\n          <TaskFormContainer\n            initialValues={task}\n            onCancel={handleCloseTaskDialog}\n            onSubmit={handleTaskFormSubmit}\n          />\n        </Dialog>\n\n        <Dialog open={projectDialogOpen} onClose={handleCloseProjectDialog}>\n          <ProjectFormContainer\n            initialValues={project}\n            onCancel={handleCloseProjectDialog}\n            onSubmit={handleUpdateProject}\n          />\n        </Dialog>\n\n        <Dialog\n          open={deleteAllTaskDialogOpen}\n          onClose={handleCloseDeleteAllTaskDialog}\n        >\n          <DialogTitle>Delete All Tasks</DialogTitle>\n          <DialogContent>Do you want to remove all the tasks ?</DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseDeleteAllTaskDialog}>Cancel</Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleDeleteAllTask}\n            >\n              Confirm\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </Fade>\n  );\n}\n\nProjectView.propTypes = {\n  redirectToProjectList: PropTypes.func,\n  match: PropTypes.shape({\n    params: PropTypes.object,\n  }),\n};\n\nexport default ProjectView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Typography,\n  Fade,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport Loader from \"TinyManager/components/Loader\";\nimport ProjectCard from \"TinyManager/components/ProjectCard\";\nimport TinyManagerAPI from \"TinyManager/services/TinyManagerAPI\";\n\nconst useStyles = makeStyles((theme) => ({\n  projectList: { height: \"85%\", padding: theme.spacing(4), overflow: \"auto\" },\n  projectCard: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction ProjectList(props) {\n  const { onProjectClick, onNewProject } = props;\n\n  const classes = useStyles();\n\n  const [loadingProjects, setLoadingProjects] = React.useState(true);\n  const [projects, setProjects] = React.useState([]);\n\n  const [deleteConfirmationStore, setDeleteConfirmationStore] = React.useState({\n    open: false,\n    project: null,\n  });\n\n  React.useEffect(() => {\n    TinyManagerAPI.fetchProjects()\n      .then(async (projects) => {\n        const tasks = await Promise.all(\n          projects.map((project) =>\n            TinyManagerAPI.fetchTasks(Number(project.id))\n          )\n        );\n\n        projects = projects.map((project, i) => {\n          const projectTasks = tasks[i];\n          project.tasks = projectTasks;\n          project.progress =\n            projectTasks && projectTasks.length\n              ? projectTasks.reduce(\n                  (progress, task) =>\n                    progress +\n                    ((100 / projectTasks.length) * Number(task.progress)) / 100,\n                  0\n                )\n              : 0;\n          return project;\n        });\n\n        setLoadingProjects(false);\n        setProjects(projects);\n      })\n      .catch(() => {\n        setLoadingProjects(false);\n      });\n  }, []);\n\n  const handleProjectClick = (e, project) => {\n    onProjectClick(project.id);\n  };\n\n  const handleNewProject = React.useCallback(() => {\n    onNewProject();\n  }, [onNewProject]);\n\n  const handleOpenDeleteConfirmation = React.useCallback((e, project) => {\n    e.stopPropagation();\n    setDeleteConfirmationStore({ open: true, project });\n  }, []);\n\n  const handleCloseDeleteConfirmation = React.useCallback(() => {\n    setDeleteConfirmationStore({ open: false, project: null });\n  }, []);\n\n  const handleDeleteProject = React.useCallback(() => {\n    const { id: projectId } = deleteConfirmationStore.project;\n    TinyManagerAPI.removeProject(projectId).then(() => {\n      setProjects((projects) => projects.filter((p) => p.id !== projectId));\n    });\n    handleCloseDeleteConfirmation();\n  }, [deleteConfirmationStore, handleCloseDeleteConfirmation]);\n\n  if (loadingProjects) {\n    return <Loader />;\n  }\n\n  return (\n    <Fade in={true}>\n      <div style={{ height: \"100%\", overflow: \"hidden\" }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Projects\n        </Typography>\n        <Button color=\"primary\" variant=\"outlined\" onClick={handleNewProject}>\n          Add New\n        </Button>\n        <br />\n        <br />\n        {projects && projects.length ? (\n          <div className={classes.projectList}>\n            {projects.map((project) => (\n              <React.Fragment key={project.id}>\n                <ProjectCard\n                  project={project}\n                  progress={project.progress}\n                  className={classes.projectCard}\n                  onClick={handleProjectClick}\n                  onDelete={handleOpenDeleteConfirmation}\n                  showDeleteButton={true}\n                />\n              </React.Fragment>\n            ))}\n          </div>\n        ) : (\n          <Typography variant=\"body1\">No available projects.</Typography>\n        )}\n        <Dialog\n          open={deleteConfirmationStore.open}\n          onClose={handleCloseDeleteConfirmation}\n        >\n          <DialogTitle>Delete Project</DialogTitle>\n          <DialogContent>\n            Delete {deleteConfirmationStore.project?.name} and related tasks ?\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseDeleteConfirmation}>Cancel</Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleDeleteProject}\n            >\n              Confirm\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </Fade>\n  );\n}\n\nProjectList.propTypes = {\n  onNewProject: PropTypes.func,\n  onProjectClick: PropTypes.func,\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport TinyManagerAPI from \"TinyManager/services/TinyManagerAPI\";\nimport ProjectView from \"TinyManager/containers/Projects/ProjectView\";\nimport ProjectList from \"TinyManager/containers/Projects/ProjectList\";\nimport ProjectForm from \"TinyManager/containers/Projects/ProjectForm\";\n\nfunction Projects(props) {\n  const { match, history } = props;\n  const { path, url } = match;\n\n  const redirectToNewProject = () => {\n    history.push(url + `/new`);\n  };\n\n  const redirectToProjectView = (projectId) => {\n    history.push(url + `/${projectId}`);\n  };\n\n  const redirectToProjectList = React.useCallback(() => {\n    history.push(url);\n  }, [history, url]);\n\n  const handleAddNewProject = React.useCallback(\n    (values) => {\n      TinyManagerAPI.addProject(values).then(redirectToProjectList);\n    },\n    [redirectToProjectList]\n  );\n\n  return (\n    <>\n      <Switch>\n        <Route\n          path={path + \"/new\"}\n          render={(props) => (\n            <ProjectForm\n              {...props}\n              onCancel={redirectToProjectList}\n              onSubmit={handleAddNewProject}\n            />\n          )}\n        />\n        <Route\n          path={path + \"/:projectId\"}\n          render={(props) => (\n            <ProjectView\n              {...props}\n              redirectToProjectList={redirectToProjectList}\n            />\n          )}\n        />\n        <Route\n          path={path}\n          render={(props) => (\n            <ProjectList\n              {...props}\n              onProjectClick={redirectToProjectView}\n              onNewProject={redirectToNewProject}\n            />\n          )}\n        />\n      </Switch>\n    </>\n  );\n}\n\nProjects.propTypes = {\n  history: PropTypes.object,\n  match: PropTypes.shape({\n    path: PropTypes.string,\n    url: PropTypes.string,\n  }),\n};\n\nexport default Projects;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Topbar from \"TinyManager/containers/Topbar\";\nimport Home from \"TinyManager/containers/Home\";\nimport Projects from \"TinyManager/containers/Projects\";\n\nconst useStyles = makeStyles((theme) => ({\n  topbar: {\n    minHeight: theme.spacing(8), //48\n  },\n  main: {\n    overflow: \"auto\",\n    maxWidth: 500,\n    margin: \"auto\",\n    padding: theme.spacing(3),\n    height: `calc(100% - ${theme.spacing(8)}px)`,\n  },\n}));\n\nfunction Content() {\n  const classes = useStyles();\n  return (\n    <>\n      <Topbar />\n      <div className={classes.topbar} />\n      <main className={classes.main}>\n        <Switch>\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default Content;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Content from \"TinyManager/containers/Content\";\nimport ThemeProvider from \"TinyManager/services/ThemeProvider\";\n\nfunction TinyManager() {\n  return (\n    <ThemeProvider>\n      <Router>\n        <Content />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default TinyManager;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport TinyManager from \"TinyManager\";\nimport * as serviceWorker from \"serviceWorker\";\n\nimport \"index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TinyManager />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}